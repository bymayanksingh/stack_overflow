services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: stack_overflow_clone_dev
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Elixir/Phoenix Backend
  backend:
    build:
      context: ./stack_overflow_backend
      dockerfile: Dockerfile
    ports:
      - "4000:4000"
    environment:
      - DATABASE_HOST=postgres
      - DATABASE_URL=ecto://postgres:postgres@postgres:5432/stack_overflow_clone_dev
      - GEMINI_API_KEY=${GEMINI_API_KEY}
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./stack_overflow_backend:/app
    command: >
      sh -c "
        mix deps.get &&
        mix ecto.create &&
        mix ecto.migrate &&
        mix phx.server
      "

  # React Frontend
  frontend:
    build:
      context: ./stack_overflow_frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:4000/api
    volumes:
      - ./stack_overflow_frontend:/app
      - /app/node_modules
    command: npm start

volumes:
  postgres_data:
